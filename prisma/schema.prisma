// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Log {
  id        Int      @id @default(autoincrement())
  level     String   @default("info")
  log       String
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id        Int       @id @default(autoincrement())
  firstName String?
  lastName  String?
  email     String?   @unique
  password  String?
  qrcode    String?   @unique
  Role      Role?     @relation(fields: [roleId], references: [id])
  roleId    Int?
  Mda       Mda?      @relation(fields: [mdaId], references: [id])
  mdaId     Int?
  logs      Log[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Session   Session[]
}

model Mda {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  mdaCode   String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User[]
}

model Session {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User?    @relation(fields: [userId], references: [id])
  userId    Int?
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  modules   Module[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User      User[]
}

model Module {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Role      Role?    @relation(fields: [roleId], references: [id])
  roleId    Int?
}
